{"version":3,"sources":["components/header/header.module.css","app.module.css","components/bikePopup/bikePopup.module.css","components/stationTable/stationTable.module.css","components/bikeIcons/bicycle-available.svg","components/bikeIcons/bicycle-unavailable.svg","components/header/Header.js","util/data/fetchUtil.js","components/common/hooks/useStationData.js","components/bikeIcons/AvailableBikesIcon.js","components/bikePopup/BikePopup.js","components/bikeIcons/UnAvailableBikesIcon.js","components/bikeMarker/BikeMarker.js","components/bikeStands/BikeStands.js","components/bikeStands/stationMapper.js","components/bikeMap/BikeMap.js","components/stationTable/statusMessage.js","components/stationTable/StationTable.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","handleOnClick","useState","linkText","setLinkText","className","style","header","logoContainer","logo","nav","navBtn","onClick","fetchData","url","a","fetch","response","status","json","Error","useStationData","stations","setStations","setStatus","updateStations","statuses","mappedStations","map","name","capacity","station_id","lat","lon","find","num_docks_available","num_bikes_available","useEffect","config","oslobysykkel","host","endpoints","stationInformation","stationStatus","data","fetchStationData","then","console","debug","catch","AvailableBikesIcon","L","Icon","iconUrl","require","iconSize","BikePopup","bikesAvailable","docksAvailable","Popup","popup","bikePopup","bikes","locks","UnAvailableBikesIcon","BikeMarker","position","Marker","icon","BikeStands","bikeStands","lng","stationMapper","key","BikeMap","Map","center","zoom","height","TileLayer","attribution","statusMessage","statusMessages","texts","stationTable","loading","error","dataCollected","StationTable","styles","tableContainer","columns","title","field","availableLocks","type","availableBikes","localization","body","emptyDataSourceMessage","isLoading","App","isMapActive","setIsMapActive","container","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,KAAO,qBAAqB,cAAgB,8BAA8B,IAAM,oBAAoB,OAAS,uBAAuB,OAAS,yB,oBCA/JD,EAAOC,QAAU,CAAC,UAAY,yB,yRCA9BD,EAAOC,QAAU,CAAC,MAAQ,2B,oBCA1BD,EAAOC,QAAU,CAAC,eAAiB,uC,gFCDnCD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,iD,gHC4B5BC,EAxBA,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACAC,mBAAS,QADT,mBACzBC,EADyB,KACfC,EADe,KAQhC,OACI,4BAAQC,UAAWC,IAAMC,QACrB,yBAAKF,UAAWC,IAAME,eAClB,uBAAGH,UAAWC,IAAMG,MAApB,SAEJ,yBAAKJ,UAAWC,IAAMI,KAClB,4BAAQL,UAAWC,IAAMK,OAAQC,QAZ7B,WACZR,EAAyB,QAAbD,EAAqB,OAAS,OAC1CF,MAU4DE,M,wECNrDU,EAZA,uCAAG,WAAMC,GAAN,eAAAC,EAAA,+EAEaC,MAAMF,GAFnB,UAIc,OAFlBG,EAFI,QAIGC,OAJH,yCAKC,SALD,uBAMGD,EAASE,OANZ,0EAQV,IAAIC,MAAJ,qCAAwCN,IAR9B,0DAAH,sDCuDAO,EAnDQ,WAAO,IAAD,EACOnB,mBAAS,IADhB,mBAClBoB,EADkB,KACRC,EADQ,OAEGrB,mBAAS,WAFZ,mBAElBgB,EAFkB,KAEVM,EAFU,KAGnBC,EAAiB,SAACH,EAAUI,GAC9B,IAAMC,EAAiBL,EAASM,KAAI,YAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,IAAKC,EAAS,EAATA,IAAS,EAIxEP,EAASQ,MAAK,SAAAhB,GAAM,OAAIa,IAAeb,EAAOa,cAClD,MAAO,CACHF,OACAC,WACAK,oBARwE,EAExEA,oBAOAC,oBATwE,EAGxEA,oBAOAJ,MACAC,UAIRV,EAAYI,GACZH,EAAU,mBA4Bd,OAzBAa,qBAAU,WAAO,IAAD,EAORC,EAAOC,aALPC,EAFQ,EAERA,KAFQ,IAGRC,UACIC,EAJI,EAIJA,mBACAC,EALI,EAKJA,eAIc,uCAAG,8BAAA5B,EAAA,sEACEF,EAAU2B,EAAOE,GADnB,cACfpB,EADe,gBAEAT,EAAU2B,EAAOG,GAFjB,OAEfzB,EAFe,OAIJ,UAAbI,GAAmC,UAAXJ,EACxBM,EAAU,SAEVC,EAAeH,EAASsB,KAAKtB,SAAUJ,EAAO0B,KAAKtB,UAPlC,2CAAH,qDAUtBuB,GACKC,MAAK,kBAAMC,QAAQC,MAAM,qBACzBC,OAAM,kBAAMzB,EAAU,cAE5B,IAEI,CAACF,WAAUJ,W,0BC7CPgC,EALY,IAAIC,IAAEC,KAAK,CAClCC,QAASC,EAAQ,KACjBC,SAAU,CAAC,GAAI,M,mCCkBJC,EAhBG,SAAC,GAAD,IAAE3B,EAAF,EAAEA,KAAM4B,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,eAAgB5B,EAAxC,EAAwCA,SAAxC,OACd,kBAAC6B,EAAA,EAAD,CAAOtD,UAAWC,IAAMsD,OACpB,4BAAK/B,GACL,qCAAOgC,YAAUC,MAAjB,aAA2BL,IAC3B,qCAAOI,YAAUE,MAAjB,aAA2BL,IAC3B,qCAAOG,YAAU/B,SAAjB,aAA8BA,MCJvBkC,EALc,IAAIb,IAAEC,KAAK,CACpCC,QAASC,EAAQ,KACjBC,SAAU,CAAC,GAAI,MCqBJU,EAlBI,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUrC,EAAZ,EAAYA,KAAM4B,EAAlB,EAAkBA,eAAgBC,EAAlC,EAAkCA,eAAgB5B,EAAlD,EAAkDA,SAAlD,OACf,kBAACqC,EAAA,EAAD,CAAQD,SAAUA,EAAUE,KAAMX,EAAiBP,EAAqBc,GACpE,kBAAC,EAAD,CAAWnC,KAAMA,EAAM4B,eAAgBA,EAAgBC,eAAgBA,EAAgB5B,SAAUA,MCoB1FuC,EAxBI,SAAC,GAAgB,IAC1BC,ECNK,SAAAhD,GAAQ,OACnBA,EAASM,KAAI,gBACKC,EADL,EACKA,KACAC,EAFL,EAEKA,SACAK,EAHL,EAGKA,oBACAC,EAJL,EAIKA,oBAJL,MAOQ,CACjB8B,SAAU,CACNlC,IATK,EAKKA,IAKVuC,IAVK,EAMKtC,KAMdJ,OACAC,WACA4B,eAAgBvB,EAChBsB,eAAgBrB,MDVDoC,CADY,EAAdlD,UAGjB,OACI,oCAEQgD,EAAW1C,KAAI,gBAAEsC,EAAF,EAAEA,SAAUrC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,SAAU4B,EAA5B,EAA4BA,eAAgBD,EAA5C,EAA4CA,eAA5C,OACX,kBAAC,EAAD,CACIgB,IAAG,UAAK5C,GAAL,OAAYqC,EAASK,KACxB1C,KAAMA,EACNqC,SAAUA,EACVT,eAAgBA,EAChBC,eAAgBA,EAChB5B,SAAUA,SEKnB4C,EAlBC,WAAO,IACZpD,EAAYD,IAAZC,SAGD4C,EAAW5C,EAAS,GAAK,CAACU,IAAKV,EAAS,GAAGU,IAAKuC,IAAKjD,EAAS,GAAGW,KAAO,CAACD,IAAK,EAAGuC,IAAK,GAE5F,OACI,kBAACI,EAAA,EAAD,CAAKC,OAAQV,EAAUW,KAAM,GAAIvE,MAAO,CAACwE,OAAQ,SAC7C,kBAACC,EAAA,EAAD,CACIC,YAAY,0EACZlE,IAAI,uDAER,kBAAC,EAAD,CAAYQ,SAAUA,M,oCCDnB2D,EAdO,SAAA/D,GAClB,IAAMgE,EAAiBC,EAAMC,aAAalE,OAC1C,OAAQA,GACJ,IAAK,UACD,OAAOgE,EAAeG,QAC1B,IAAK,QACD,OAAOH,EAAeI,MAC1B,IAAK,iBACD,OAAOJ,EAAeK,cAC1B,QACI,MAAO,KCmBJC,EAxBM,WAAO,IAAD,EACInE,IAApBC,EADgB,EAChBA,SAAUJ,EADM,EACNA,OAEjB,OACI,yBAAKb,UAAWoF,IAAOC,gBACnB,kBAAC,IAAD,CACIC,QAAS,CACL,CAACC,MAAOT,EAAMC,aAAavD,KAAMgE,MAAO,QACxC,CAACD,MAAOT,EAAMC,aAAaU,eAAgBD,MAAO,sBAAuBE,KAAM,WAC/E,CAACH,MAAOT,EAAMC,aAAaY,eAAgBH,MAAO,sBAAuBE,KAAM,YAEnFE,aAAc,CACVC,KAAM,CACFC,uBAAwBlB,EAAc/D,KAG9C0B,KAAMtB,EACN8E,UAAsB,YAAXlF,EACX0E,MAAOT,EAAMC,aAAaQ,UCN3BS,EAbH,WAAO,IAAD,EACwBnG,oBAAS,GADjC,mBACPoG,EADO,KACMC,EADN,KAGd,OACI,6BACI,kBAAC,EAAD,CAAQtG,cAAe,kBAAMsG,GAAgBD,MAC7C,0BAAMjG,UAAWoF,IAAOe,WACnBF,EAAc,kBAAC,EAAD,MAAa,kBAAC,EAAD,SCDxBG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtE,MAAK,SAAAuE,GACJA,EAAaC,gBAEdrE,OAAM,SAAAqC,GACLvC,QAAQuC,MAAMA,EAAMiC,a","file":"static/js/main.3ec1b640.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"header_logo__N72Li\",\"logoContainer\":\"header_logoContainer__LWadJ\",\"nav\":\"header_nav__xbd9O\",\"navBtn\":\"header_navBtn__aCR78\",\"header\":\"header_header__3kder\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__3mR0C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"bikePopup_popup__3dRyL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"stationTable_tableContainer__24RL6\"};","module.exports = __webpack_public_path__ + \"static/media/bicycle-available.576cfcb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/bicycle-unavailable.826572b5.svg\";","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './header.module.css'\r\n\r\nconst Header = ({handleOnClick}) => {\r\n    const [linkText, setLinkText] = useState('List');\r\n    const onClick = () => {\r\n        setLinkText(linkText === 'Map' ? 'List' : 'Map');\r\n        handleOnClick();\r\n    };\r\n\r\n\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.logoContainer}>\r\n                <p className={style.logo}>Demo</p>\r\n            </div>\r\n            <div className={style.nav}>\r\n                <button className={style.navBtn} onClick={onClick}>{linkText}</button>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    handleOnClick: PropTypes.func\r\n};\r\n\r\nexport default Header;\r\n\r\n","const fetchData = async url => {\r\n    try {\r\n        const response = await fetch(url);\r\n\r\n        if (response.status !== 200)\r\n            return 'error';\r\n        return await response.json();\r\n    } catch (e) {\r\n        new Error(`Failed to fetch data from: ${url}`);\r\n    }\r\n};\r\n\r\nexport default fetchData;","import {useEffect, useState} from 'react';\r\nimport config from '../../../config.json';\r\nimport fetchData from '../../../util/data/fetchUtil';\r\n\r\nconst useStationData = () => {\r\n    const [stations, setStations] = useState([]);\r\n    const [status, setStatus] = useState('LOADING');\r\n    const updateStations = (stations, statuses) => {\r\n        const mappedStations = stations.map(({name, capacity, station_id, lat, lon}) => {\r\n            const {\r\n                num_docks_available,\r\n                num_bikes_available\r\n            } = statuses.find(status => station_id === status.station_id);\r\n            return {\r\n                name,\r\n                capacity,\r\n                num_docks_available,\r\n                num_bikes_available,\r\n                lat,\r\n                lon\r\n            };\r\n        });\r\n\r\n        setStations(mappedStations);\r\n        setStatus('DATA_COLLECTED');\r\n    };\r\n\r\n    useEffect(() => {\r\n        const {\r\n            host,\r\n            endpoints: {\r\n                stationInformation,\r\n                stationStatus\r\n            }\r\n        } = config.oslobysykkel;\r\n\r\n        const fetchStationData = async () => {\r\n            const stations = await fetchData(host + stationInformation);\r\n            const status = await fetchData(host + stationStatus);\r\n\r\n            if (stations === 'error' || status === 'error')\r\n                setStatus('ERROR');\r\n            else\r\n                updateStations(stations.data.stations, status.data.stations);\r\n        };\r\n\r\n        fetchStationData()\r\n            .then(() => console.debug('retrieved data'))\r\n            .catch(() => setStatus('ERROR'));\r\n\r\n    }, []);\r\n\r\n    return {stations, status};\r\n};\r\n\r\nexport default useStationData;\r\n","import L from 'leaflet';\r\n\r\nconst AvailableBikesIcon = new L.Icon({\r\n    iconUrl: require('./bicycle-available.svg'),\r\n    iconSize: [40, 40]\r\n});\r\n\r\nexport default AvailableBikesIcon;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {bikePopup} from '../../texts/texts_no';\r\nimport style from './bikePopup.module.css'\r\nimport {Popup} from 'react-leaflet';\r\n\r\nconst BikePopup = ({name, bikesAvailable, docksAvailable, capacity}) => (\r\n    <Popup className={style.popup}>\r\n        <h2>{name}</h2>\r\n        <p>{`${bikePopup.bikes}: ${bikesAvailable}`}</p>\r\n        <p>{`${bikePopup.locks}: ${docksAvailable}`}</p>\r\n        <p>{`${bikePopup.capacity}: ${capacity}`}</p>\r\n    </Popup>\r\n);\r\n\r\nBikePopup.propTypes = {\r\n    bikesAvailable: PropTypes.number.isRequired,\r\n    capacity: PropTypes.number.isRequired,\r\n    docksAvailable: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BikePopup;\r\n","import L from 'leaflet';\r\n\r\nconst UnAvailableBikesIcon = new L.Icon({\r\n    iconUrl: require('./bicycle-unavailable.svg'),\r\n    iconSize: [40, 40]\r\n});\r\n\r\nexport default UnAvailableBikesIcon;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Marker} from 'react-leaflet';\r\nimport AvailableBikesIcon from '../bikeIcons/AvailableBikesIcon';\r\nimport BikePopup from '../bikePopup/BikePopup';\r\nimport UnAvailableBikesIcon from '../bikeIcons/UnAvailableBikesIcon';\r\n\r\nconst BikeMarker = ({position, name, bikesAvailable, docksAvailable, capacity}) => (\r\n    <Marker position={position} icon={bikesAvailable ? AvailableBikesIcon : UnAvailableBikesIcon}>\r\n        <BikePopup name={name} bikesAvailable={bikesAvailable} docksAvailable={docksAvailable} capacity={capacity}/>\r\n    </Marker>\r\n);\r\n\r\n\r\nBikeMarker.propTypes = {\r\n    bikesAvailable: PropTypes.number.isRequired,\r\n    capacity: PropTypes.number.isRequired,\r\n    docksAvailable: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    position: PropTypes.shape({\r\n        lat: PropTypes.number,\r\n        lng: PropTypes.number\r\n    }).isRequired\r\n};\r\n\r\nexport default BikeMarker;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport stationMapper from './stationMapper';\r\nimport BikeMarker from '../bikeMarker/BikeMarker';\r\n\r\nconst BikeStands = ({stations}) => {\r\n    const bikeStands = stationMapper(stations);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                bikeStands.map(({position, name, capacity, docksAvailable, bikesAvailable}) =>\r\n                    <BikeMarker\r\n                        key={`${name}${position.lng}`}\r\n                        name={name}\r\n                        position={position}\r\n                        bikesAvailable={bikesAvailable}\r\n                        docksAvailable={docksAvailable}\r\n                        capacity={capacity}\r\n                    />)\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nBikeStands.propTypes = {\r\n    stations: PropTypes.array.isRequired\r\n};\r\n\r\nexport default BikeStands;\r\n","export default stations =>\r\n    stations.map(({\r\n                      name,\r\n                      capacity,\r\n                      num_docks_available,\r\n                      num_bikes_available,\r\n                      lat,\r\n                      lon\r\n                  }) => ({\r\n        position: {\r\n            lat,\r\n            lng: lon\r\n        },\r\n        name,\r\n        capacity,\r\n        docksAvailable: num_docks_available,\r\n        bikesAvailable: num_bikes_available,\r\n    }));","import React from 'react'\r\nimport {Map, TileLayer} from 'react-leaflet';\r\nimport useStationData from '../common/hooks/useStationData';\r\nimport BikeStands from '../bikeStands/BikeStands';\r\n\r\nconst BikeMap = () => {\r\n    const {stations} = useStationData();\r\n\r\n    // Map is set default of first station, should use browser api ot get position.\r\n    const position = stations[0] ? {lat: stations[0].lat, lng: stations[0].lon} : {lat: 0, lng: 0};\r\n\r\n    return (\r\n        <Map center={position} zoom={18} style={{height: '93vh'}}>\r\n            <TileLayer\r\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            <BikeStands stations={stations}/>\r\n        </Map>\r\n    )\r\n\r\n};\r\n\r\nexport default BikeMap;","import texts from '../../texts/texts_no';\r\n\r\nconst statusMessage = status => {\r\n    const statusMessages = texts.stationTable.status;\r\n    switch (status) {\r\n        case 'LOADING' :\r\n            return statusMessages.loading;\r\n        case 'ERROR':\r\n            return statusMessages.error;\r\n        case 'DATA_COLLECTED':\r\n            return statusMessages.dataCollected;\r\n        default:\r\n            return '';\r\n    }\r\n};\r\n\r\nexport default statusMessage;","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport texts from '../../texts/texts_no';\r\nimport styles from './stationTable.module.css'\r\nimport useStationData from '../common/hooks/useStationData';\r\nimport statusMessage from './statusMessage';\r\n\r\nconst StationTable = () => {\r\n    const {stations, status} = useStationData();\r\n\r\n    return (\r\n        <div className={styles.tableContainer}>\r\n            <MaterialTable\r\n                columns={[\r\n                    {title: texts.stationTable.name, field: 'name'},\r\n                    {title: texts.stationTable.availableLocks, field: 'num_docks_available', type: 'numeric'},\r\n                    {title: texts.stationTable.availableBikes, field: 'num_bikes_available', type: 'numeric'}\r\n                ]}\r\n                localization={{\r\n                    body: {\r\n                        emptyDataSourceMessage: statusMessage(status)\r\n                    }\r\n                }}\r\n                data={stations}\r\n                isLoading={status === 'LOADING'}\r\n                title={texts.stationTable.title}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StationTable;\r\n","import React, {useState} from 'react';\r\nimport Header from './components/header/Header';\r\nimport styles from './app.module.css';\r\nimport BikeMap from './components/bikeMap/BikeMap';\r\nimport StationTable from './components/stationTable/StationTable';\r\n\r\nconst App = () => {\r\n    const [isMapActive, setIsMapActive] = useState(true);\r\n\r\n    return (\r\n        <div >\r\n            <Header handleOnClick={() => setIsMapActive(!isMapActive)}/>\r\n            <main className={styles.container}>\r\n                {isMapActive ? <BikeMap/> : <StationTable/>}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}